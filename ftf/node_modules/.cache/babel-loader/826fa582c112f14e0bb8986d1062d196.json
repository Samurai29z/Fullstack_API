{"ast":null,"code":"//GET Method\nconst express = require(\"express\");\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst router = express.Router();\n\nconst getStats = async (req, res, next) => {\n  try {\n    const data = fs.readFileSync(path.join(__dirname, \"./stats.json\"));\n    const stats = JSON.parse(data);\n    const playerStats = stats.find(player => player.id === Number(req.params.id));\n\n    if (!playerStats) {\n      const err = new Error(\"Player stats not found\");\n      err.status = 404;\n      throw err;\n    }\n\n    res.json(playerStats);\n  } catch (e) {\n    next(e);\n  }\n};\n\nrouter.route(\"/api/v1/stats/:id\").get(getStats);\nmodule.exports = router;\nconst statsFilePath = path.join(__dirname, \"./stats.json\"); //POST Method\n\nconst createStats = async (req, res, next) => {\n  try {\n    const data = fs.readFileSync(statsFilePath);\n    const stats = JSON.parse(data);\n    const newStats = {\n      id: req.body.id,\n      wins: req.body.wins,\n      losses: req.body.losses,\n      points_scored: req.body.points_scored,\n      first_name: req.body.first_name,\n      last_name: req.body.last_name,\n      age: req.body.age\n    };\n    stats.push(newStats);\n    fs.writeFileSync(statsFilePath, JSON.stringify(stats));\n    res.status(201).json(newStats);\n  } catch (e) {\n    next(e);\n  }\n};\n\nrouter.route(\"/api/v1/stats\").post(createStats); //PUT Method\n\nconst updateStats = async (req, res, next) => {\n  try {\n    const data = fs.readFileSync(statsFilePath);\n    const stats = JSON.parse(data);\n    const playerStats = stats.find(player => player.id === Number(req.params.id));\n\n    if (!playerStats) {\n      const err = new Error(\"Player stats not found\");\n      err.status = 404;\n      throw err;\n    }\n\n    const newStatsData = {\n      id: req.body.id,\n      wins: req.body.wins,\n      losses: req.body.losses,\n      points_scored: req.body.points_scored,\n      first_name: req.body.first_name,\n      last_name: req.body.last_name,\n      age: req.body.age\n    };\n    const newStats = stats.map(player => {\n      if (player.id === Number(req.params.id)) {\n        return newStatsData;\n      } else {\n        return player;\n      }\n    });\n    fs.writeFileSync(statsFilePath, JSON.stringify(newStats));\n    res.status(200).json(newStatsData);\n  } catch (e) {\n    next(e);\n  }\n};\n\nrouter.route(\"/api/v1/stats/:id\").get(getStats).put(updateStats); //DELETE Method\n\nconst deleteStats = async (req, res, next) => {\n  try {\n    const data = fs.readFileSync(statsFilePath);\n    const stats = JSON.parse(data);\n    const playerStats = stats.find(player => player.id === Number(req.params.id));\n\n    if (!playerStats) {\n      const err = new Error(\"Player stats not found\");\n      err.status = 404;\n      throw err;\n    }\n\n    const newStats = stats.map(player => {\n      if (player.id === Number(req.params.id)) {\n        return null;\n      } else {\n        return player;\n      }\n    }).filter(player => player !== null);\n    fs.writeFileSync(statsFilePath, JSON.stringify(newStats));\n    res.status(200).end();\n  } catch (e) {\n    next(e);\n  }\n};\n\nrouter.route(\"/api/v1/stats/:id\").get(getStats).put(updateStats).delete(deleteStats);","map":{"version":3,"names":["express","require","fs","path","router","Router","getStats","req","res","next","data","readFileSync","join","__dirname","stats","JSON","parse","playerStats","find","player","id","Number","params","err","Error","status","json","e","route","get","module","exports","statsFilePath","createStats","newStats","body","wins","losses","points_scored","first_name","last_name","age","push","writeFileSync","stringify","post","updateStats","newStatsData","map","put","deleteStats","filter","end","delete"],"sources":["/Users/imacg1/Desktop/foot_APP/ftf/src/ROUTES/stats.js"],"sourcesContent":["//GET Method\nconst express = require(\"express\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst router = express.Router();\n\nconst getStats = async (req, res, next) => {\n    try {\n        const data = fs.readFileSync(path.join(__dirname, \"./stats.json\"));\n        const stats = JSON.parse(data);\n        const playerStats = stats.find(\n            (player) => player.id === Number(req.params.id)\n        );\n        if (!playerStats) {\n            const err = new Error(\"Player stats not found\");\n            err.status = 404;\n            throw err;\n        }\n        res.json(playerStats);\n    } catch (e) {\n        next(e);\n    }\n};\n\nrouter.route(\"/api/v1/stats/:id\").get(getStats);\n\nmodule.exports = router;\n\nconst statsFilePath = path.join(__dirname, \"./stats.json\");\n\n\n\n//POST Method\nconst createStats = async (req, res, next) => {\n    try {\n        const data = fs.readFileSync(statsFilePath);\n        const stats = JSON.parse(data);\n        const newStats = {\n\n        id: req.body.id,\n        wins: req.body.wins,\n        losses: req.body.losses,\n        points_scored: req.body.points_scored,\n        first_name:req.body.first_name,\n        last_name:req.body.last_name,\n        age:req.body.age,\n        };\n        stats.push(newStats);\n        fs.writeFileSync(statsFilePath, JSON.stringify(stats));\n        res.status(201).json(newStats);\n    } catch (e) {\n        next(e);\n    }\n};\n\nrouter.route(\"/api/v1/stats\").post(createStats);\n\n\n\n\n//PUT Method\nconst updateStats = async (req, res, next) => {\n    try {\n        const data = fs.readFileSync(statsFilePath);\n        const stats = JSON.parse(data);\n        const playerStats = stats.find(\n            (player) => player.id === Number(req.params.id)\n        );\n        if (!playerStats) {\n            const err = new Error(\"Player stats not found\");\n            err.status = 404;\n            throw err;\n        }\n        const newStatsData = {\n\n        id: req.body.id,\n        wins: req.body.wins,\n        losses: req.body.losses,\n        points_scored: req.body.points_scored,\n        first_name:req.body.first_name,\n        last_name:req.body.last_name,\n        age:req.body.age,\n        };\n        const newStats = stats.map((player) => {\n            if (player.id === Number(req.params.id)) {\n                return newStatsData;\n            } else {\n                return player;\n            }\n        });\n        fs.writeFileSync(statsFilePath, JSON.stringify(newStats));\n        res.status(200).json(newStatsData);\n    } catch (e) {\n        next(e);\n    }\n};\n\nrouter.route(\"/api/v1/stats/:id\").get(getStats).put(updateStats);\n\n\n\n//DELETE Method\nconst deleteStats = async (req, res, next) => {\n    try {\n        const data = fs.readFileSync(statsFilePath);\n        const stats = JSON.parse(data);\n        const playerStats = stats.find(\n            (player) => player.id === Number(req.params.id)\n        );\n        if (!playerStats) {\n            const err = new Error(\"Player stats not found\");\n            err.status = 404;\n            throw err;\n        }\n        const newStats = stats\n            .map((player) => {\n                if (player.id === Number(req.params.id)) {\n                    return null;\n                } else {\n                    return player;\n                }\n            })\n            .filter((player) => player !== null);\n        fs.writeFileSync(statsFilePath, JSON.stringify(newStats));\n        res.status(200).end();\n    } catch (e) {\n        next(e);\n    }\n};\n\nrouter\n    .route(\"/api/v1/stats/:id\")\n    .get(getStats)\n    .put(updateStats)\n    .delete(deleteStats);"],"mappings":"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"},"metadata":{},"sourceType":"module"}